// <auto-generated />
using System;
using DAL_SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL_SqlServer.Migrations
{
    [DbContext(typeof(ntpContext))]
    partial class ntpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL_SqlServer.Models.Countries", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.EconomicIndicatorEvents", b =>
                {
                    b.Property<int>("Eieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EIEId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("EventDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EventTime")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Forecast")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Impact")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("IndicatorId")
                        .HasColumnType("int");

                    b.Property<string>("Previous")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Revised")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Eieid");

                    b.HasIndex("IndicatorId");

                    b.ToTable("EconomicIndicatorEvents");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.EconomicIndicators", b =>
                {
                    b.Property<int>("IndicatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("IndicatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("IndicatorId");

                    b.HasIndex("CountryId");

                    b.ToTable("EconomicIndicators");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.IndicatorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Actual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Forecast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Previous")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReleaseTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IndicatorData");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.IndicatorDataCcyName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndicatorDataCcyName");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.IndicatorDataScrapeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RecordCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScrapeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndicatorDataScrapeHistory");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.Prices", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ac")
                        .HasColumnName("AC")
                        .HasColumnType("float");

                    b.Property<double>("Ah")
                        .HasColumnName("AH")
                        .HasColumnType("float");

                    b.Property<double>("Al")
                        .HasColumnName("AL")
                        .HasColumnType("float");

                    b.Property<double>("Ao")
                        .HasColumnName("AO")
                        .HasColumnType("float");

                    b.Property<double>("Bc")
                        .HasColumnName("BC")
                        .HasColumnType("float");

                    b.Property<double>("Bh")
                        .HasColumnName("BH")
                        .HasColumnType("float");

                    b.Property<double>("Bl")
                        .HasColumnName("BL")
                        .HasColumnType("float");

                    b.Property<double>("Bo")
                        .HasColumnName("BO")
                        .HasColumnType("float");

                    b.Property<double>("C")
                        .HasColumnType("float");

                    b.Property<double>("H")
                        .HasColumnType("float");

                    b.Property<double>("L")
                        .HasColumnType("float");

                    b.Property<double>("O")
                        .HasColumnType("float");

                    b.Property<DateTime>("PriceDateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("SymbolId")
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.HasIndex("SymbolId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.Symbols", b =>
                {
                    b.Property<int>("SymbolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModify")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SymbolCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("SymbolId");

                    b.ToTable("Symbols");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.vwCountryIndicator", b =>
                {
                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("vwCountryIndicator");
                });

            modelBuilder.Entity("DAL_SqlServer.Models.EconomicIndicatorEvents", b =>
                {
                    b.HasOne("DAL_SqlServer.Models.EconomicIndicators", "Indicator")
                        .WithMany("EconomicIndicatorEvents")
                        .HasForeignKey("IndicatorId")
                        .HasConstraintName("FK_EconomicIndicatorEvents_EconomicIndicators")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL_SqlServer.Models.EconomicIndicators", b =>
                {
                    b.HasOne("DAL_SqlServer.Models.Countries", "Country")
                        .WithMany("EconomicIndicators")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_EconomicIndicators_Countries")
                        .IsRequired();
                });

            modelBuilder.Entity("DAL_SqlServer.Models.Prices", b =>
                {
                    b.HasOne("DAL_SqlServer.Models.Symbols", "Symbol")
                        .WithMany()
                        .HasForeignKey("SymbolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
